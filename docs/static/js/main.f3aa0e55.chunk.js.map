{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hook/useFetchGifs.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","input","setInput","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","images","map","img","id","title","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","setcategories","k","ReactDOM","render","document","getElementById"],"mappings":"yMAGe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAEzBC,mBAAS,IAFgB,mBAE5CC,EAF4C,KAErCC,EAFqC,KAYnD,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAMK,OAAOC,OAAS,IACtBR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAcO,OAC/BN,EAAS,MAMb,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,GAAQF,EAASE,EAAEQ,OAAOF,Y,mCCpBxCG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,0FAC2EC,UAAUH,GADrF,sBAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KACFC,EAASD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIF,OAAOK,iBAAiBX,QARrB,kBAWbM,GAXa,4CAAH,sDCERM,EAAc,SAAC,GAAuB,EAArBH,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKa,UAAU,yCAAf,UACI,4BAAIH,IACJ,qBACII,IAAKd,EACLe,IAAKL,QCHRM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNY,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAmBtC,OAbAC,qBAAU,WAENvB,EAASC,GAAUuB,MAAK,SAAAb,GACpBW,EAAS,CACLd,KAAKG,EACLS,SAAQ,SAKjB,CAACnB,IAGGoB,EDb2BI,CAAaxB,GAAjCQ,EAJuB,EAI7BD,KAAcY,EAJe,EAIfA,QAMtB,OACI,qCACI,6BAAKnB,IACJmB,GAAW,mBAAGJ,UAAU,iBAAb,2BACZ,qBAAKA,UAAU,YAAf,SAEQP,EAAOC,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEnBtB,SAASc,IAAgB,IAAD,EACCvC,mBAAS,IADV,mBAC5BwC,EAD4B,KAChBC,EADgB,KAEnC,OACI,gCACI,8CACA,cAAC3C,EAAD,CACIC,cAAe0C,IAEnB,uBAEID,EAAWjB,KAAI,SAAAmB,GAAC,OACZ,cAAC,EAAD,CAEI5B,SAAU4B,GADLA,S,MCV7BC,IAASC,OACP,cAACL,EAAD,IACAM,SAASC,eAAe,W","file":"static/js/main.f3aa0e55.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function AddCategory({ setCategories }) {\r\n\r\n    const [input, setInput] = useState('')\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (input.trim().length > 2) {\r\n            setCategories(cat => [input,...cat]);\r\n            setInput('');\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={input}\r\n                onChange={(e) => { setInput(e.target.value) }}\r\n            />\r\n\r\n        </form>\r\n    )\r\n\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","export const getGifts = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=GbLdVHxrtkroZr1yk0Y84P0omkPkCVYO&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const images = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return images;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <p>{title}</p>\r\n            <img\r\n                src={url}\r\n                alt={title}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hook/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"animate__flash\">'cargando...'</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifts(category).then(img =>{\r\n            setState({\r\n                data:img,\r\n                loading:false\r\n            })\r\n        })\r\n\r\n\r\n    }, [category])\r\n    \r\n\r\n    return state;\r\n}","import { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport default function GifExpertApp() {\r\n    const [categories, setcategories] = useState([])\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory\r\n                setCategories={setcategories}\r\n            />\r\n            <hr />\r\n            {\r\n                categories.map(k =>\r\n                    <GifGrid\r\n                        key={k}\r\n                        category={k} />)\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}